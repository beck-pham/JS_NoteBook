[{"/Users/beck/Documents/SWE/jsnotebook/src/index.tsx":"1","/Users/beck/Documents/SWE/jsnotebook/src/components/code-editor.tsx":"2","/Users/beck/Documents/SWE/jsnotebook/src/components/preview.tsx":"3","/Users/beck/Documents/SWE/jsnotebook/src/bundler/index.ts":"4","/Users/beck/Documents/SWE/jsnotebook/src/bundler/plugins/fetch-plugin.ts":"5","/Users/beck/Documents/SWE/jsnotebook/src/bundler/plugins/unpkg-path-plugin.ts":"6","/Users/beck/Documents/SWE/jsnotebook/src/components/code-cell.tsx":"7","/Users/beck/Documents/SWE/jsnotebook/src/components/resizable.tsx":"8"},{"size":300,"mtime":1611959522742,"results":"9","hashOfConfig":"10"},{"size":3011,"mtime":1611960360221,"results":"11","hashOfConfig":"10"},{"size":1266,"mtime":1612215761555,"results":"12","hashOfConfig":"10"},{"size":1195,"mtime":1611874166681,"results":"13","hashOfConfig":"10"},{"size":2496,"mtime":1611701305038,"results":"14","hashOfConfig":"10"},{"size":1094,"mtime":1611636513768,"results":"15","hashOfConfig":"10"},{"size":1037,"mtime":1611960036509,"results":"16","hashOfConfig":"10"},{"size":560,"mtime":1612215952536,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"i6ls3s",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/beck/Documents/SWE/jsnotebook/src/index.tsx",[],["36","37"],"/Users/beck/Documents/SWE/jsnotebook/src/components/code-editor.tsx",[],"/Users/beck/Documents/SWE/jsnotebook/src/components/preview.tsx",[],"/Users/beck/Documents/SWE/jsnotebook/src/bundler/index.ts",[],"/Users/beck/Documents/SWE/jsnotebook/src/bundler/plugins/fetch-plugin.ts",[],"/Users/beck/Documents/SWE/jsnotebook/src/bundler/plugins/unpkg-path-plugin.ts",[],"/Users/beck/Documents/SWE/jsnotebook/src/components/code-cell.tsx",["38"],"import React, { useState } from 'react';\nimport bundle from '../bundler';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport Resizable from './resizable';\n\n\nconst CodeCell = () => {\n  const [input, setInput] = useState(''); // the initial state of code that user write in the <textarea>\n  const [code, setCode] = useState(''); // the initial state of esbuild tool code in the <pre> element\n  \n  const onClick = async() => {\n    const output = await bundle(input);\n    setCode(output);\n  };\n\n  return (\n    <Resizable direction='vertical'>\n      <div style={{ height: '100%', display: 'flex', flexDirection: 'row' }}>\n        <CodeEditor \n          initialValue='Your code here...'\n          onChange={(value) => setInput(value)}\n        />\n        {/* <textarea value ={input} onChange={e => setInput(e.target.value)}></textarea>\n        <div>\n          <button onClick={onClick}>Submit</button>\n        </div> */}\n        <Preview code={code} />\n      </div>\n    </Resizable>\n  )\n}\n\nexport default CodeCell;","/Users/beck/Documents/SWE/jsnotebook/src/components/resizable.tsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":12,"column":9,"nodeType":"45","messageId":"46","endLine":12,"endColumn":16},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"@typescript-eslint/no-unused-vars","'onClick' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]